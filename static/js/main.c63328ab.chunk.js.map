{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","number","setNumber","redirect","useCallback","isValidPhoneNumber","toString","undefined","window","open","className","placeholder","value","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAqCeA,MA7Bf,WACE,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAWC,uBAAY,WAAO,IAAD,EAC7BC,YAAkB,iBAACJ,QAAD,IAACA,OAAD,EAACA,EAAQK,kBAAT,QAAuB,MAC3CJ,OAAUK,GACVC,OAAOC,KAAP,8CAAmDR,GAAU,aAE9D,CAACA,IAEJ,OACE,qBAAKS,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yDACA,oCACE,cAAC,IAAD,CACEC,YAAY,kBACZC,MAAOX,EACPY,SAAUX,IAEZ,wBAAQQ,UAAU,aAAaI,QAASX,EAAxC,0BCdKY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c63328ab.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\";\n\nimport PhoneInput, { isValidPhoneNumber } from \"react-phone-number-input\";\nimport { E164Number } from \"libphonenumber-js/types\";\n\nimport \"react-phone-number-input/style.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [number, setNumber] = useState<E164Number | undefined>();\n\n  const redirect = useCallback(() => {\n    if (isValidPhoneNumber(number?.toString() ?? \"\")) {\n      setNumber(undefined);\n      window.open(`https://api.whatsapp.com/send?phone=${number}`, \"_blank\");\n    }\n  }, [number]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Whatsapp Without Contact</p>\n        <section>\n          <PhoneInput\n            placeholder=\"Whatsapp number\"\n            value={number}\n            onChange={setNumber}\n          />\n          <button className=\"App-button\" onClick={redirect}>\n            Go!\n          </button>\n        </section>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}